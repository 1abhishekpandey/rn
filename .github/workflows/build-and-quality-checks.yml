name: Build & Code Quality Checks

on:
  pull_request:
    branches: ['develop', 'master']
    types: ['opened', 'reopened', 'synchronize']

jobs:
  build:
    name: Build & Code Quality Checks
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1

      - name: Setup CocoaPods
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          version: 1.11.3

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        env:
          HUSKY: 0
        run: |
          npm run setup

      - name: Execute quality checks
        run: |
          npm run check:circular

      - name: Execute security checks
        run: |
          npm run check:security

      - name: Execute android build check
        run: |
          nx build-android example

      - name: Xcode Version
        run: |
          xcode-select -p
          /usr/bin/xcodebuild -version

      - name: Execute iOS build check
        env:
          FORCE_BUNDLING: true
          RCT_NO_LAUNCH_PACKAGER: false
        run: |
         cd apps/example/ios && xcodebuild \
          -workspace Example.xcworkspace \
          -scheme Example \
          -destination "generic/platform=iOS" \
          -configuration Release \
          -UseModernBuildSystem=NO \
          CODE_SIGNING_ALLOWED=NO
